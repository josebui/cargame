
 
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

import javax.swing.AbstractButton;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
 
/* 
 * GUI.java requires the following files:
 *   images/right.gif
 *   images/middle.gif
 *   images/left.gif
 */
public class GUI extends JPanel
                        implements ActionListener {
    protected JButton b1, b2, b3;
 
    public GUI() {

 
        b1 = new JButton("Start");
        b1.setVerticalTextPosition(AbstractButton.CENTER);
        b1.setHorizontalTextPosition(AbstractButton.LEADING); //aka LEFT, for left-to-right locales
        b1.setMnemonic(KeyEvent.VK_D);
        b1.setActionCommand("start");
 

        b2 = new JButton("Stop");
        //Use the default text position of CENTER, TRAILING (RIGHT).
        b2.setMnemonic(KeyEvent.VK_E);
        b2.setActionCommand("stop");
        b2.setEnabled(false);
 
        //Listen for actions on buttons 1 and 3.
        b1.addActionListener(this);
        b2.addActionListener(this);
 
        b1.setToolTipText("Click this button to start the tracker");
        b2.setToolTipText("Click this button to stop the tracker");
 
        //Add Components to this container, using the default FlowLayout.
        add(b1);
        add(b2);
    }
 
    public void actionPerformed(ActionEvent e) {
        if ("start".equals(e.getActionCommand())) {
        	b1.setEnabled(false);
        	b2.setEnabled(true);            
        } else {
        	b1.setEnabled(true);
        	b2.setEnabled(false);            
        }
    }
 
 
    /**
     * Create the GUI and show it.  For thread safety, 
     * this method should be invoked from the 
     * event-dispatching thread.
     */
    public static void createAndShowGUI() {
 
        //Create and set up the window.
        JFrame frame = new JFrame("Car Game Tracker");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setMinimumSize(new Dimension(100, 100));
        //Create and set up the content pane.
        GUI newContentPane = new GUI();
        newContentPane.setOpaque(true); //content panes must be opaque
        frame.setContentPane(newContentPane);
 
        //Display the window.
        frame.pack();
        frame.setVisible(true);
    }
 
    public static void main(String[] args) {
        //Schedule a job for the event-dispatching thread:
        //creating and showing this application's GUI.
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                createAndShowGUI(); 
            }
        });
    }
}